@model MyCinema.Data.TicketOrder
@{
    var Salon = Model.Tickets[0].Screening.TheatreSalon;
    int maxSelectableSeats = Model.Tickets.Count;
}
<form asp-action="SelectSeats" method="post">
<div class="container mt-5">
    <div class="screen"> SCREEN </div>
    <div id="grid-container">
        @for (int i = 0; i < Salon.Rows; i++)
        {
                <div class="d-flex justify-content-center mb-2">
                @for (int j = 0; j < Salon.Columns; j++)
                {
                    var coords = $"{i},{j}";
                    if (Salon.EmptySeatsCoords.Contains(coords))
                    {
                                    <div class="grid-item addSalon border border-primary"
                                         style="visibility:hidden"
                                         data-row="@i"
                                         data-col="@j">
                                    </div>
                    }
                    else
                    {
                                    <div class="grid-item addSalon border border-primary"
                                         onclick="toggleSeatSelection(this)"
                                         data-row="@i"
                                         data-col="@j">
                                    </div>
                    }
                }
                </div>
        }
    </div>
    <div class="mt-4 text-center">
        <h4>Selected Seats: <span id="selected-seats-count">0</span> / @maxSelectableSeats</h4>
        <button type="submit" id="submit-seats" class="btn btn-success mt-2" disabled>Confirm Seats</button>
    </div>
</div>
</form>
    <script>
    const maxSelectableSeats = @maxSelectableSeats;
    let selectedSeatsCount = 0;

    function toggleSeatSelection(element) {
        if (element.classList.contains('clicked')) {
            element.classList.remove('clicked');
            selectedSeatsCount--;
        } else if (selectedSeatsCount < maxSelectableSeats) {
            element.classList.add('clicked');
            selectedSeatsCount++;
        }

        document.getElementById('selected-seats-count').innerText = selectedSeatsCount;

        document.getElementById('submit-seats').disabled = (selectedSeatsCount !== maxSelectableSeats);
    }
    function getClickedCells() {
    const clickedCells = [];
    document.querySelectorAll('.grid-item.clicked').forEach(cell => {
        const row = cell.getAttribute('data-row');
        const col = cell.getAttribute('data-col');
        clickedCells.push({ row: parseInt(row), col: parseInt(col) });
    });
    return clickedCells;
}

document.getElementById('submit-seats').addEventListener('click', () => {
    const clickedCells = getClickedCells();
    const seatDataInput = document.createElement('input');
    seatDataInput.type = 'hidden';
    seatDataInput.name = 'selectedSeats';
    seatDataInput.value = JSON.stringify(clickedCells);
    document.querySelector('form').appendChild(seatDataInput);

    document.querySelector('form').submit(); // Submit the form
});
</script>