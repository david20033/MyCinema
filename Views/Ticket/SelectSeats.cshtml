@model MyCinema.ViewModels.SelectSeatsViewModel
@{
    //var Salon = Model.Tickets[0].Screening.TheatreSalon;
    int maxSelectableSeats = Model.TicketCount;
}
<form asp-action="SelectSeats" method="post">
<div class="container mt-5">
    <div class="screen"> SCREEN </div>
    <div id="grid-container">
            <input type="hidden" name="SeatCoords" id="SeatCoords" />
            <input type="hidden" asp-for="TicketOrderId" />
        @for (int i = 0; i < Model.SalonRows; i++)
        {
                <div class="d-flex justify-content-center mb-2">
                @for (int j = 0; j < Model.SalonColumns; j++)
                {
                    var coords = $"{i},{j}";
                    if (Model.EmptySeatsCoords.Contains(coords))
                    {
                                    <div class="grid-item addSalon border border-primary"
                                         style="visibility:hidden"
                                         data-row="@i"
                                         data-col="@j"> @j
                                    </div>
                    }
                    else
                    {
                                    <div class="grid-item addSalon border border-primary"
                                         onclick="toggleSeatSelection(this)"
                                         data-row="@i"
                                 data-col="@j">
                                @(j+1)
                                    </div>
                    }
                }
                </div>
        }
    </div>
    <div class="mt-4 text-center">
        <h4>Selected Seats: <span id="selected-seats-count">0</span> / @maxSelectableSeats</h4>
        <button type="submit" id="submit-seats" class="btn btn-success mt-2" disabled>Confirm Seats</button>
    </div>
</div>
</form>
    <script>
    const maxSelectableSeats = @maxSelectableSeats;
    let selectedSeatsCount = 0;
    const clickerCoords = []
    function toggleSeatSelection(element) {
        const row = element.getAttribute('data-row');
        const col = element.getAttribute('data-col');
        const coordinate = `${row},${col}`;
        if (element.classList.contains('clicked')) {
            element.classList.remove('clicked');
             selectedSeatsCount--;
             const index = clickerCoords.indexOf(coordinate);
             clickerCoords.splice(index, 1);
        } else if (selectedSeatsCount < maxSelectableSeats) {
            element.classList.add('clicked');
            selectedSeatsCount++;
             clickerCoords.push(coordinate);
        }

        document.getElementById('selected-seats-count').innerText = selectedSeatsCount;

        document.getElementById('submit-seats').disabled = (selectedSeatsCount !== maxSelectableSeats);

    }

document.getElementById('submit-seats').addEventListener('click', () => {
        const hiddenInput = document.getElementById("SeatCoords");
        hiddenInput.value = JSON.stringify(clickerCoords);
    document.querySelector('form').submit();
});
</script>